// <auto-generated />
using System;
using Carwash.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Carwash.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231201104150_updatebouns")]
    partial class updatebouns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Carwash.Domain.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pride"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Dena"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Arrizo"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Persia"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Peugeot405"
                        },
                        new
                        {
                            Id = 6,
                            Name = "SurenPlus"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Samand"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Runu"
                        },
                        new
                        {
                            Id = 9,
                            Name = "206"
                        },
                        new
                        {
                            Id = 10,
                            Name = "207"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Tara"
                        },
                        new
                        {
                            Id = 12,
                            Name = "SLX"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Shahin"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Optima"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Azera"
                        });
                });

            modelBuilder.Entity("Carwash.Domain.Entities.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("Carwash.Domain.Entities.Khadamat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Khadamats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Roshoee",
                            Price = 60000m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Broom",
                            Price = 40000m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Wax",
                            Price = 50000m
                        });
                });

            modelBuilder.Entity("Carwash.Domain.Entities.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "mousavi@gmail.com",
                            FirstName = "mahdi",
                            LastName = "mousavi",
                            Password = "AQAAAAEAACcQAAAAEK9x9+ISdWBk8FLbeVdw4JsLUlDsZpdipLXilK/lT4KD1zKrjjRx13n2bB42d7PMoA=="
                        });
                });

            modelBuilder.Entity("Carwash.Domain.Entities.ManagerInHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HistoryId")
                        .HasColumnType("int");

                    b.Property<int>("ManagerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HistoryId");

                    b.HasIndex("ManagerId");

                    b.ToTable("ManagerInHistories");
                });

            modelBuilder.Entity("Carwash.Domain.Entities.Worker", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 20,
                            FirstName = "mahdi",
                            LastName = "mousavi",
                            Salary = 0m
                        },
                        new
                        {
                            Id = 2,
                            Age = 55,
                            FirstName = "emaeil",
                            LastName = "akbary",
                            Salary = 0m
                        },
                        new
                        {
                            Id = 3,
                            Age = 17,
                            FirstName = "amirhosein",
                            LastName = "Khodabandelo",
                            Salary = 0m
                        });
                });

            modelBuilder.Entity("Carwash.Domain.Entities.WorkerInHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("HistoryId")
                        .HasColumnType("int");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HistoryId");

                    b.HasIndex("WorkerId");

                    b.ToTable("WorkerInHistories");
                });

            modelBuilder.Entity("Carwash.Domain.Entities.WorkerInKhadamat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Bonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KhadamatId")
                        .HasColumnType("int");

                    b.Property<int>("WorkerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KhadamatId");

                    b.HasIndex("WorkerId");

                    b.ToTable("WorkerInKhadamats");
                });

            modelBuilder.Entity("Carwash.Domain.Entities.ManagerInHistory", b =>
                {
                    b.HasOne("Carwash.Domain.Entities.History", "History")
                        .WithMany("ManagerInHistory")
                        .HasForeignKey("HistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Carwash.Domain.Entities.Manager", "Manager")
                        .WithMany("ManagerInHistory")
                        .HasForeignKey("ManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("History");

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Carwash.Domain.Entities.WorkerInHistory", b =>
                {
                    b.HasOne("Carwash.Domain.Entities.History", "History")
                        .WithMany("WorkerInHistory")
                        .HasForeignKey("HistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Carwash.Domain.Entities.Worker", "Worker")
                        .WithMany("WorkerInHistory")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("History");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("Carwash.Domain.Entities.WorkerInKhadamat", b =>
                {
                    b.HasOne("Carwash.Domain.Entities.Khadamat", "Khadamat")
                        .WithMany("WorkerInKhadamats")
                        .HasForeignKey("KhadamatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Carwash.Domain.Entities.Worker", "Worker")
                        .WithMany("WorkerInKhadamats")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Khadamat");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("Carwash.Domain.Entities.History", b =>
                {
                    b.Navigation("ManagerInHistory");

                    b.Navigation("WorkerInHistory");
                });

            modelBuilder.Entity("Carwash.Domain.Entities.Khadamat", b =>
                {
                    b.Navigation("WorkerInKhadamats");
                });

            modelBuilder.Entity("Carwash.Domain.Entities.Manager", b =>
                {
                    b.Navigation("ManagerInHistory");
                });

            modelBuilder.Entity("Carwash.Domain.Entities.Worker", b =>
                {
                    b.Navigation("WorkerInHistory");

                    b.Navigation("WorkerInKhadamats");
                });
#pragma warning restore 612, 618
        }
    }
}
